package votingApplication;


/**
* votingApplication/_VotingMachineImplBase.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from votingApplication.idl
* lundi 9 avril 2007 23 h 37 CEST
*/

public abstract class _VotingMachineImplBase extends org.omg.CORBA.portable.ObjectImpl
                implements votingApplication.VotingMachine, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors
  public _VotingMachineImplBase ()
  {
  }

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_serial", new java.lang.Integer (0));
    _methods.put ("_set_serial", new java.lang.Integer (1));
    _methods.put ("_get_canton", new java.lang.Integer (2));
    _methods.put ("_set_canton", new java.lang.Integer (3));
    _methods.put ("_get_district", new java.lang.Integer (4));
    _methods.put ("_set_district", new java.lang.Integer (5));
    _methods.put ("_get_department", new java.lang.Integer (6));
    _methods.put ("_set_department", new java.lang.Integer (7));
    _methods.put ("_get_office", new java.lang.Integer (8));
    _methods.put ("_set_office", new java.lang.Integer (9));
    _methods.put ("checkAccess", new java.lang.Integer (10));
    _methods.put ("checkRightToVote", new java.lang.Integer (11));
    _methods.put ("getCandidates", new java.lang.Integer (12));
    _methods.put ("initMAV", new java.lang.Integer (13));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // votingApplication/VotingMachine/_get_serial
       {
         String $result = null;
         $result = this.serial ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // votingApplication/VotingMachine/_set_serial
       {
         String newSerial = in.read_string ();
         this.serial (newSerial);
         out = $rh.createReply();
         break;
       }

       case 2:  // votingApplication/VotingMachine/_get_canton
       {
         String $result = null;
         $result = this.canton ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // votingApplication/VotingMachine/_set_canton
       {
         String newCanton = in.read_string ();
         this.canton (newCanton);
         out = $rh.createReply();
         break;
       }

       case 4:  // votingApplication/VotingMachine/_get_district
       {
         String $result = null;
         $result = this.district ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // votingApplication/VotingMachine/_set_district
       {
         String newDistrict = in.read_string ();
         this.district (newDistrict);
         out = $rh.createReply();
         break;
       }

       case 6:  // votingApplication/VotingMachine/_get_department
       {
         short $result = (short)0;
         $result = this.department ();
         out = $rh.createReply();
         out.write_short ($result);
         break;
       }

       case 7:  // votingApplication/VotingMachine/_set_department
       {
         short newDepartment = in.read_short ();
         this.department (newDepartment);
         out = $rh.createReply();
         break;
       }

       case 8:  // votingApplication/VotingMachine/_get_office
       {
         String $result = null;
         $result = this.office ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 9:  // votingApplication/VotingMachine/_set_office
       {
         String newOffice = in.read_string ();
         this.office (newOffice);
         out = $rh.createReply();
         break;
       }

       case 10:  // votingApplication/VotingMachine/checkAccess
       {
         votingApplication.Voter aVoter = votingApplication.VoterHelper.read (in);
         boolean $result = false;
         $result = this.checkAccess (aVoter);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 11:  // votingApplication/VotingMachine/checkRightToVote
       {
         String insee = in.read_string ();
         String $result = null;
         $result = this.checkRightToVote (insee);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 12:  // votingApplication/VotingMachine/getCandidates
       {
         votingApplication.Candidate $result[] = null;
         $result = this.getCandidates ();
         out = $rh.createReply();
         votingApplication.ListeCandidatesHelper.write (out, $result);
         break;
       }

       case 13:  // votingApplication/VotingMachine/initMAV
       {
         this.initMAV ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:votingApplication/VotingMachine:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }


} // class _VotingMachineImplBase
